---
import TileFooter from './TileFooter.astro';
import Pen from "./Pen.astro";

export type Props = {
	name?: string;
	from?: string;
	link?: string;
	to?: string;
	tech?: string[];
}

const { name, link, from, to = "Current", tech } = Astro.props as Props;

const isGif = from.endsWith(".gif");
const isCodepenTile = from.endsWith("codepen");
const rootClass = isGif ? "gif" : isCodepenTile ? "pen" : "position";
---


<a
	target="_blank"
	referrer-policy="no-referrer"
	class={`tile tile--${rootClass}`}
	href={link} >
	{ isGif ? 
		<img src={from} alt={name} /> : 
	  	isCodepenTile ? 
		<Pen /> : 
		<div>
			<div class="period">
				<small class="period__year">{from}</small>
				<small class="period__year">{to}</small>
			</div>
			<p>{name}</p> 
		</div>
	}
	<TileFooter tech={tech} isPen={true} hasLink={!!link}/>
</a> 

<style lang="scss">
	.tile {
		padding: 0;
		display: flex;
		flex-flow: row wrap;
		margin: 0;
		height: 100%;
		position: relative;
	}
	.tile--gif {
		&>img {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	}
	.tile--position {
		padding: 1em;
		position: relative;
		background: rgba(0, 0, 0, 0.4);
		overflow: hidden;
		color: inherit;
		text-decoration: none;
		@media (hover: hover) {
			& > div:last-child {
				transform: translateY(100%);
				opacity: 0;
			}
			&:hover {
				> div:last-child {
					transform: translateY(0);
					opacity: 1;
				}
			}
		}
	}
	.period {
		margin: 0;
		font-size: var(--ft-16);
		font-variant: tabular-nums;
		&__year::first-of-type:after {
			content: "-";
			margin: 0 5px;
		}
	}
</style>